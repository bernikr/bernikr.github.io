// Reset some basic elements
body, h1, h2, h3, h4, h5, h6,
p, blockquote, pre, hr,
dl, dd, ol, ul, figure {
	margin: 0;
	padding: 0;
}

// Basic styling
body {
	font-family: $base-font-family;
	font-size: $base-font-size;
	line-height: $base-line-height;
	font-weight: 300;
	color: $text-color;
	background-color: $background-color;
	-webkit-text-size-adjust: 100%;
}

// Set `margin-bottom` to maintain vertical rhythm
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
ul, ol, dl, figure,
%vertical-rhythm {
	margin-bottom: $spacing-unit / 2;
}



/**
* Element styling
*/

// Headings
h1, h2, h3, h4, h5, h6 {
	font-weight: 300;
}

// Links
a {
	color: $brand-color;
	text-decoration: none;

	&:visited {
		color: darken($brand-color, 15%);
	}

	&:hover {
		color: $text-color;
		text-decoration: underline;
	}
}


// Images
img {
	max-width: 100%;
	vertical-align: middle;
}

// Figures
figure {
	> img {
		display: block;
	}

	figcaption {
		font-size: $small-font-size;
	}
}

// Lists
ul, ol {
	margin-left: $spacing-unit;

	// Nested lists
	li {
		> ul,
		> ol {
			margin-bottom: 0;
		}
	}
}

// Blockquotes
blockquote {
	color: $grey-color;
	border-left: 4px solid $grey-color-light;
	padding-left: $spacing-unit / 2;
	font-size: 18px;
	letter-spacing: -1px;
	font-style: italic;

	> :last-child {
		margin-bottom: 0;
	}
}

// Icons
.icon {
	display: inline-block;
	fill: currentColor;
	width: 0.8em;
	height: 0.8em;
}

// Math
html.no-js script[type="math/tex"] {
	display: inline;
}



/**
* H
*/

// Wrapper
%wrapper {
	max-width: -webkit-calc(800px - (#{$spacing-unit} * 2));
	max-width:         calc(800px - (#{$spacing-unit} * 2));
	margin-right: auto;
	margin-left: auto;
	padding-right: $spacing-unit;
	padding-left: $spacing-unit;
	@extend %clearfix;

	@include media-query($on-tablet) {
		max-width: -webkit-calc(800px - (#{$spacing-unit}));
		max-width:         calc(800px - (#{$spacing-unit}));
		padding-right: $spacing-unit / 2;
		padding-left: $spacing-unit / 2;
	}
}

// Clearfix
%clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}
